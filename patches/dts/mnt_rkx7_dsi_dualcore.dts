
/dts-v1/;

/ {

	#address-cells = <1>;
	#size-cells		 = <1>;

	reg_vref_3v3: regulator-vref-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "vref-3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		status = "okay";
	};

	reg_2v5: regulator-2v5 {
		compatible = "regulator-fixed";
		regulator-name = "reg-2v5";
		regulator-min-microvolt = <2500000>;
		regulator-max-microvolt = <2500000>;
		regulator-always-on;
		status = "okay";
	};

	reg_1v2: regulator-1v2 {
		compatible = "regulator-fixed";
		regulator-name = "reg1v2";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
		status = "okay";
	};

	panel {
		status = "disabled";
		compatible = "innolux,n125hce-gn1", "edp-panel", "simple-panel";
		power = <&reg_vref_3v3>;
		no-hpd;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;

				panel_edp_in: endpoint {
					remote-endpoint = <&edp_bridge_out>;
				};
			};
		};
	};

	chosen {
		bootargs = "console=tty0 earlycon=liteuart,0xf0001000 rootwait root=/dev/mmcblk0p2"; // console=liteuart0
		linux,initrd-start = <0x41000000>;
		linux,initrd-end	 = <0x43800000>;
	};

	cpus {
		#address-cells = <1>;
		#size-cells		 = <0>;
		timebase-frequency = <100000000>;

		CPU0: cpu@0 {
			device_type = "cpu";
			compatible = "riscv";
			riscv,isa = "rv32i2p0_ma";
			mmu-type = "riscv,sv32";
			reg = <0>;
			clock-frequency = <100000000>;
			status = "okay";

			d-cache-size = <8192>;
			d-cache-sets = <2>;
			d-cache-block-size = <64>;

			i-cache-size = <8192>;
			i-cache-sets = <2>;
			i-cache-block-size = <64>;


			d-tlb-size = <4>;
			d-tlb-sets = <4>;

			i-tlb-size = <4>;
			i-tlb-sets = <4>;

			L0: interrupt-controller {
				#interrupt-cells = <0x00000001>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};

		CPU1: cpu@1 {
			device_type = "cpu";
			compatible = "riscv";
			riscv,isa = "rv32i2p0_ma";
			mmu-type = "riscv,sv32";
			reg = <1>;
			clock-frequency = <100000000>;
			status = "okay";

			d-cache-size = <8192>;
			d-cache-sets = <2>;
			d-cache-block-size = <64>;

			i-cache-size = <8192>;
			i-cache-sets = <2>;
			i-cache-block-size = <64>;


			d-tlb-size = <4>;
			d-tlb-sets = <4>;

			i-tlb-size = <4>;
			i-tlb-sets = <4>;

			L1: interrupt-controller {
				#interrupt-cells = <0x00000001>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};


		cpu-map {
			cluster0 {
				core0 {
					cpu = <&CPU0>;
				};
				core1 {
					cpu = <&CPU1>;
				};
			};
		};
	};

	memory@40000000 {
		device_type = "memory";
		reg = <0x40000000 0x40000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells		 = <1>;
		ranges;

		opensbi@40f00000 {
			reg = <0x40f00000 0x80000>;
		};

		framebuffer@7f000000 {
			reg = <0x7f000000 0x7e9000>;
		};
	};

	clocks {
		sys_clk: litex_sys_clk {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <100000000>;
		};
	};

	vreg_mmc: vreg_mmc {
		compatible = "regulator-fixed";
		regulator-name = "vreg_mmc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	soc {
		#address-cells = <1>;
		#size-cells		 = <1>;
		compatible = "simple-bus";
		interrupt-parent = <&intc0>;
		ranges;

		soc_ctrl0: soc_controller@f0000800 {
			compatible = "litex,soc-controller";
			reg = <0xf0000800 0xc>;
			status = "okay";
		};

		intc0: interrupt-controller@f0c00000 {
			compatible = "sifive,fu540-c000-plic", "sifive,plic-1.0.0";
			reg = <0xf0c00000 0x400000>;
			#address-cells = <0>;
			#interrupt-cells = <1>;
			interrupt-controller;
			interrupts-extended = <
			&L0 11 &L0 9
			&L1 11 &L1 9>;
			riscv,ndev = <32>;
		};

		liteuart0: serial@f0001000 {
			compatible = "litex,liteuart";
			reg = <0xf0001000 0x100>;
			interrupts = <0>;
			status = "okay";
		};

		mac0: mac@f0002800 {
			compatible = "litex,liteeth";
			reg = <0xf0002800 0x7c>,
			<0xf0003000 0x0a>,
			<0x80000000 0x2000>;
			reg-names = "mac", "mdio", "buffer";
			litex,rx-slots = <2>;
			litex,tx-slots = <2>;
			litex,slot-size = <2048>;
			interrupts = <2>;
			status = "okay";
		};

		usb0: mac@c0000000 {
			compatible = "generic-ohci";
			reg = <0xc0000000 0x1000>;
			interrupts = <16>;
			status = "okay";
		};

		mmc0: mmc@f0007800 {
			compatible = "litex,mmc";
			reg = <0xf0007800 0x100>,
			<0xf0006000 0x100>,
			<0xf0005800 0x100>,
			<0xf0007000 0x100>,
			<0xf0006800 0x100>;
			reg-names = "phy", "core", "reader", "writer", "irq";
			clocks = <&sys_clk>;
			vmmc-supply = <&vreg_mmc>;
			bus-width = <0x04>;
			interrupts = <3>;
			status = "okay";
		};

		leds: gpio@f0000000 {
			compatible = "litex,gpio";
			reg = <0xf0000000 0x4>;
			gpio-controller;
			#gpio-cells = <2>;
			litex,direction = "out";
			status = "okay";
		};

		i2c0: i2c@f0003800 {
			compatible = "litex,i2c";
			reg = <0xf0003800 0x5>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			hdmi: sii9022a@39 {
				compatible = "sil,sii9022a";
				reg = <0x39>;

				status = "disabled";
			};

			edp_bridge: anx9807@38 {
				/* analogix,anx9807 */
				compatible = "analogix,anx6345";
				reg = <0x38>;
				dvdd25-supply = <&reg_2v5>;
				dvdd12-supply = <&reg_1v2>;
				status = "okay";

				edp_bridge_ports: ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@1 {
						reg = <1>;
						edp_bridge_out: endpoint {
							remote-endpoint = <&panel_edp_in>;
						};
					};
				};
			};
		};

		i2c1: i2c@f0004000 {
			compatible = "litex,i2c";
			reg = <0xf0004000 0x5>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
		};

		i2c2: i2c@f0004800 {
			compatible = "litex,i2c";
			reg = <0xf0004800 0x5>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			rtc@68 {
				compatible = "nxp,pcf8523";
				status = "okay";
				reg = <0x68>;
			};
		};

		framebuffer0: framebuffer@7f000000 {
			compatible = "simple-framebuffer";
			reg = <0x7f000000 0x7e9000>;
			width = <1920>;
			height = <1080>;
			stride = <7680>;
			format = "x8r8g8b8";

			status = "okay";
		};

	};

	aliases {

		serial0 = &liteuart0;

	};

};

&leds {
	litex,ngpio = <4>;
	status = "okay";
};
